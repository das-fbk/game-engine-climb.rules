package eu.trentorise.game.model

import eu.trentorise.game.notification.MessageNotification;

global String const_school_name;
global Double const_NoCarDayClass_bonus;
global Double const_ZeroImpactDayClass_bonus;

rule "Zero Impact Day Notification"
// END-OF-DAY notification (and bonus)
// in case  a CLASS comes to school with every child (except absent ones)
// using zero-impact modes
salience -1000
when
	Game($gameId: id)
	Player($teamId : id, $teamId != const_school_name, team == true, $class_size : totalMembers)
	$part : PointConcept(name == "participation_count", $today : getPeriodCurrentScore("daily"),
		((Double)$today).intValue() == ((Integer)$class_size).intValue() )
	$absent: PointConcept(name == "absence_count")
	$zst : PointConcept(name == "zeroImpact_solo_trips")
	$zat : PointConcept(name == "zeroImpact_wAdult_trips")
	$pt : PointConcept(name == "pedibus_trips")
	$bonus_dist : PointConcept(name == "bonus_distance")
	$tot_dist : PointConcept(name == "total_distance")
then
	Double validTrips = $zst.getPeriodCurrentScore("daily") 
		+ $zat.getPeriodCurrentScore("daily")
		+ $pt.getPeriodCurrentScore("daily");
    int present = ((Integer)$class_size).intValue() - $absent.getPeriodCurrentScore("daily").intValue();
	if (validTrips == present) {
		log("apply \' Zero Impact Day Notification \' to class: " + (String)$teamId);
		$bonus_dist.setScore($bonus_dist.getScore() + const_ZeroImpactDayClass_bonus);
		$tot_dist.setScore($tot_dist.getScore() + const_ZeroImpactDayClass_bonus);
		
		MessageNotification message = new MessageNotification($gameId, $teamId, "ZeroImpactDayClass");
		message.addData("_bonus_", (const_ZeroImpactDayClass_bonus));
		update($bonus_dist);
		update($tot_dist);
		insert(message);
		insert(new UpdateTeams("ZeroImpactDay"));
	}
end

rule "Zero Impact Day propagation"
salience -1000
when
	Propagation(action == "ZeroImpactDay")
	Player($teamId : id, team == true) // only works with teams
	$bonus_dist : PointConcept(name == "bonus_distance")
	$tot_dist : PointConcept(name == "total_distance")
then
	log("apply \' Zero Impact Day propagation \' ");
	$bonus_dist.setScore($bonus_dist.getScore() + const_ZeroImpactDayClass_bonus);
	$tot_dist.setScore($tot_dist.getScore() + const_ZeroImpactDayClass_bonus);
	update($bonus_dist);
	update($tot_dist);
end

rule "No Car Day Notification"
// END-OF-DAY notification (and bonus)
// in case  a whole CLASS comes to school avoiding private car
salience -1000
when
	Game($gameId: id)
	Player($teamId : id, $teamId != const_school_name, team == true, $class_size : totalMembers)
	$part : PointConcept(name == "participation_count", $today : getPeriodCurrentScore("daily"),
		((Double)$today).intValue() == ((Integer)$class_size).intValue() )
	$ct : PointConcept(name == "car_trips")
	$bonus_dist : PointConcept(name == "bonus_distance")
	$tot_dist : PointConcept(name == "total_distance")
then
	Double carTrips = $ct.getPeriodCurrentScore("daily");
	if (carTrips == 0d) {
		log("apply \'No Car Day Notification \' to class: " + (String)$teamId);
		$bonus_dist.setScore($bonus_dist.getScore() + const_NoCarDayClass_bonus);
		$tot_dist.setScore($tot_dist.getScore() + const_NoCarDayClass_bonus);
		
		MessageNotification message = new MessageNotification($gameId, $teamId, "NoCarDayClass");
		message.addData("_bonus_", (const_NoCarDayClass_bonus));
		update($bonus_dist);
		update($tot_dist);
		insert(message);
		insert(new UpdateTeams("NoCarDay"));
	}
end

rule "No Car Day propagation"
// propagates info from CLASS to SCHOOL
// includes setting of counter of No-Car classes for the day
salience -1000
when
	Propagation(action == "NoCarDay")
	Player($teamId : id, team == true, $teamId == const_school_name) // only works with SCHOOL
	$ncc : PointConcept(name == "no_car_classes")
	$bonus_dist : PointConcept(name == "bonus_distance")
	$tot_dist : PointConcept(name == "total_distance")
then
	log("apply \'No Car Day propagation \' ");
	$bonus_dist.setScore($bonus_dist.getScore() + const_NoCarDayClass_bonus);
	$tot_dist.setScore($tot_dist.getScore() + const_NoCarDayClass_bonus);
	$ncc.setScore($ncc.getScore() +1d);
	update($bonus_dist);
	update($tot_dist);
	update($ncc);
end
