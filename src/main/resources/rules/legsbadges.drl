package  eu.trentorise.game.model

import eu.trentorise.game.notification.BadgeNotification;

global Double const_almost_reached_next_leg;
global Double leg_1_distance;
global Double leg_2_distance;
global Double leg_3_distance;
global Double leg_4_distance;
global Double leg_5_distance;

rule "R-notify-almost leg-1"
	salience -1000
when 
	$bc : BadgeCollectionConcept(name == 'LegsToKangole', badgeEarned not contains 'Leg_1') 
    PointConcept(name == 'total_distance', 
    	score > leg_1_distance - const_almost_reached_next_leg && const_almost_reached_next_leg < leg_1_distance)
    Game( $gameId: id)
    Player( $teamId : id, team == true )
then
    log("apply \'R-notify-almost leg-1\'");
    insert(new BadgeNotification($gameId,$teamId, $bc.getName(), 'almost reached Leg_1'));
    //update( $bc );
end

rule "R-add-badge leg-1"
	salience -1000
when 
    PointConcept(name == 'total_distance', score >= leg_1_distance)
    $bc : BadgeCollectionConcept(name == 'LegsToKangole', badgeEarned not contains 'Leg_1') 
    Game( $gameId: id)
    Player($teamId : id, team == true)
then
    log("apply \'R-add-badge leg-1\'");
    $bc.getBadgeEarned().add('Leg_1');
    insert(new BadgeNotification($gameId,$teamId, $bc.getName(), 'Leg_1'));
    update( $bc );
end

rule "R-notify-almost leg-2"
	salience -1000
when 
	$bc : BadgeCollectionConcept(name == 'LegsToKangole', badgeEarned not contains 'Leg_2') 
    PointConcept(name == 'total_distance', 
    	score > leg_2_distance - const_almost_reached_next_leg && const_almost_reached_next_leg < leg_2_distance)
    Game( $gameId: id)
    Player( $teamId : id, team == true )
then
    log("apply \'R-notify-almost leg-2\'");
    insert(new BadgeNotification($gameId,$teamId, $bc.getName(), 'almost reached Leg_2'));
    //update( $bc );
end

rule "R-add-badge leg-2"
	salience -1000
when 
    PointConcept(name == 'total_distance', score >= leg_2_distance)
    $bc : BadgeCollectionConcept(name == 'LegsToKangole', badgeEarned not contains 'Leg_2') 
    Game( $gameId: id)
    Player($teamId : id, team == true)
then
    log("apply \'R-add-badge leg-2\'");
    $bc.getBadgeEarned().add('Leg_2');
    insert(new BadgeNotification($gameId,$teamId, $bc.getName(), 'Leg_2'));
    update( $bc );
end

rule "R-notify-almost leg-3"
	salience -1000
when 
	$bc : BadgeCollectionConcept(name == 'LegsToKangole', badgeEarned not contains 'Leg_3') 
    PointConcept(name == 'total_distance', 
    	score > leg_3_distance - const_almost_reached_next_leg && const_almost_reached_next_leg < leg_3_distance)
    Game( $gameId: id)
    Player( $teamId : id, team == true )
then
    log("apply \'R-notify-almost leg-3\'");
    insert(new BadgeNotification($gameId,$teamId, $bc.getName(), 'almost reached Leg_3'));
    //update( $bc );
end

rule "R-add-badge leg-3"
	salience -1000
when 
    PointConcept(name == 'total_distance', score >= leg_3_distance)
    $bc : BadgeCollectionConcept(name == 'LegsToKangole', badgeEarned not contains 'Leg_3') 
    Game( $gameId: id)
    Player($teamId : id, team == true)
then
    log("apply \'R-add-badge leg-3\'");
    $bc.getBadgeEarned().add('Leg_3');
    insert(new BadgeNotification($gameId,$teamId,$bc.getName(),'Leg_3'));
    update( $bc );
end

rule "R-notify-almost leg-4"
	salience -1000
when 
	$bc : BadgeCollectionConcept(name == 'LegsToKangole', badgeEarned not contains 'Leg_4') 
    PointConcept(name == 'total_distance', 
    	score > leg_4_distance - const_almost_reached_next_leg && const_almost_reached_next_leg < leg_4_distance)
    Game( $gameId: id)
    Player( $teamId : id, team == true )
then
    log("apply \'R-notify-almost leg-4\'");
    insert(new BadgeNotification($gameId,$teamId, $bc.getName(), 'almost reached Leg_4'));
    //update( $bc );
end

rule "R-add-badge leg-4"
	salience -1000
when 
    PointConcept(name == 'total_distance', score >= leg_4_distance)
    $bc : BadgeCollectionConcept(name == 'LegsToKangole', badgeEarned not contains 'Leg_4') 
    Game( $gameId: id)
    Player($teamId : id, team == true)
then
    log("apply \'R-add-badge leg-4\'");
    $bc.getBadgeEarned().add('Leg_4');
    insert(new BadgeNotification($gameId,$teamId,$bc.getName(),'Leg_4'));
    update( $bc );
end
rule "R-notify-almost leg-5"
	salience -1000
when 
	$bc : BadgeCollectionConcept(name == 'LegsToKangole', badgeEarned not contains 'Leg_5') 
    PointConcept(name == 'total_distance', 
    	score > leg_5_distance - const_almost_reached_next_leg && const_almost_reached_next_leg < leg_5_distance)
    Game( $gameId: id)
    Player( $teamId : id, team == true )
then
    log("apply \'R-notify-almost leg-5\'");
    insert(new BadgeNotification($gameId,$teamId, $bc.getName(), 'almost reached Leg_5'));
    //update( $bc );
end

rule "R-add-badge leg-5"
	salience -1000
when 
    PointConcept(name == 'total_distance', score >= leg_5_distance)
    $bc : BadgeCollectionConcept(name == 'LegsToKangole', badgeEarned not contains 'Leg_5') 
    Game( $gameId: id)
    Player($teamId : id, team == true)
then
    log("apply \'R-add-badge leg-5\'");
    $bc.getBadgeEarned().add('Leg_5');
    insert(new BadgeNotification($gameId,$teamId,$bc.getName(),'Leg_5'));
    update( $bc );
end


